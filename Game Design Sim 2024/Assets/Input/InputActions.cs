//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""a15916d8-60d3-4342-9f44-7c9ba22d5cf0"",
            ""actions"": [
                {
                    ""name"": ""Dismiss1"",
                    ""type"": ""Button"",
                    ""id"": ""c68cf8ee-d655-4b01-9163-8f58dda718b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dismiss2"",
                    ""type"": ""Button"",
                    ""id"": ""7b2aa300-5ee8-4f4b-b7a3-ddb63df41f98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dismiss3"",
                    ""type"": ""Button"",
                    ""id"": ""7c92f924-ba0b-4fa6-b2e8-7b04b05ca028"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dismiss4"",
                    ""type"": ""Button"",
                    ""id"": ""17fed484-c2ea-4173-8c66-69e6fe39d1ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""Button"",
                    ""id"": ""96991608-fa82-4ab9-9133-523c00a21f03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Click"",
                    ""type"": ""Button"",
                    ""id"": ""150cccfb-458c-4482-8569-919c4410daf3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Middle Click"",
                    ""type"": ""Button"",
                    ""id"": ""380e7e73-0099-4c8a-a979-5cd8535b2f8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Click"",
                    ""type"": ""Button"",
                    ""id"": ""e5ce1128-f0fe-4bea-a368-ebd04ff061e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll Wheel"",
                    ""type"": ""Button"",
                    ""id"": ""05b6572e-86bb-4d70-aa68-f9ddec9a27df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""7e4fdb8d-e7db-462c-9ee7-21951b5c0096"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""e9c41f1f-dd46-4e8e-8f76-7a4fe553aeb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""e37b53df-f467-42be-85ee-56ffa2589165"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tracked Position"",
                    ""type"": ""Button"",
                    ""id"": ""996078a5-2069-44b5-b92c-6ef90afa8f2f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tracked Orientation"",
                    ""type"": ""Button"",
                    ""id"": ""34a6cd4d-5080-47e0-80e6-8ca10e1ff0d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c3df4a16-3b38-4d72-b280-405ce7bb769a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dismiss1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf1a2dd0-37b7-4b71-ba5c-f786285a9135"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dismiss1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d4224ca-205a-4bbe-8260-8602d63b618e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dismiss2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b3bee91-1c65-40a8-a778-d13e906967b8"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dismiss3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a10688dc-3e42-4d00-9d42-47ad2c68ef6b"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dismiss4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5bcf5412-0749-43df-ad6e-7b9f855c33b9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a907ceeb-d631-40ed-9609-ebfa55491c42"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc9e546c-bf2d-437c-a8b5-ecdf7fb69125"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Middle Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d035448c-4b9d-4551-a003-dde2db33e129"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""122575a2-fe3f-48b0-a365-cda7ad438c80"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07d1dba5-bc29-49cc-8140-e3f15eba2563"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0288d46a-35f5-4c7d-9ab5-8e2e9afca675"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0888192-b44d-490a-a5b9-7f8e2a226bc5"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bd14150-fdcc-4537-90f0-a4b09a3db7be"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracked Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bb0fab9-aa0c-45be-ba57-0cd23dfb3ffa"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracked Orientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_Dismiss1 = m_Default.FindAction("Dismiss1", throwIfNotFound: true);
        m_Default_Dismiss2 = m_Default.FindAction("Dismiss2", throwIfNotFound: true);
        m_Default_Dismiss3 = m_Default.FindAction("Dismiss3", throwIfNotFound: true);
        m_Default_Dismiss4 = m_Default.FindAction("Dismiss4", throwIfNotFound: true);
        m_Default_Point = m_Default.FindAction("Point", throwIfNotFound: true);
        m_Default_LeftClick = m_Default.FindAction("Left Click", throwIfNotFound: true);
        m_Default_MiddleClick = m_Default.FindAction("Middle Click", throwIfNotFound: true);
        m_Default_RightClick = m_Default.FindAction("Right Click", throwIfNotFound: true);
        m_Default_ScrollWheel = m_Default.FindAction("Scroll Wheel", throwIfNotFound: true);
        m_Default_Move = m_Default.FindAction("Move", throwIfNotFound: true);
        m_Default_Submit = m_Default.FindAction("Submit", throwIfNotFound: true);
        m_Default_Cancel = m_Default.FindAction("Cancel", throwIfNotFound: true);
        m_Default_TrackedPosition = m_Default.FindAction("Tracked Position", throwIfNotFound: true);
        m_Default_TrackedOrientation = m_Default.FindAction("Tracked Orientation", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default
    private readonly InputActionMap m_Default;
    private List<IDefaultActions> m_DefaultActionsCallbackInterfaces = new List<IDefaultActions>();
    private readonly InputAction m_Default_Dismiss1;
    private readonly InputAction m_Default_Dismiss2;
    private readonly InputAction m_Default_Dismiss3;
    private readonly InputAction m_Default_Dismiss4;
    private readonly InputAction m_Default_Point;
    private readonly InputAction m_Default_LeftClick;
    private readonly InputAction m_Default_MiddleClick;
    private readonly InputAction m_Default_RightClick;
    private readonly InputAction m_Default_ScrollWheel;
    private readonly InputAction m_Default_Move;
    private readonly InputAction m_Default_Submit;
    private readonly InputAction m_Default_Cancel;
    private readonly InputAction m_Default_TrackedPosition;
    private readonly InputAction m_Default_TrackedOrientation;
    public struct DefaultActions
    {
        private @InputActions m_Wrapper;
        public DefaultActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dismiss1 => m_Wrapper.m_Default_Dismiss1;
        public InputAction @Dismiss2 => m_Wrapper.m_Default_Dismiss2;
        public InputAction @Dismiss3 => m_Wrapper.m_Default_Dismiss3;
        public InputAction @Dismiss4 => m_Wrapper.m_Default_Dismiss4;
        public InputAction @Point => m_Wrapper.m_Default_Point;
        public InputAction @LeftClick => m_Wrapper.m_Default_LeftClick;
        public InputAction @MiddleClick => m_Wrapper.m_Default_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_Default_RightClick;
        public InputAction @ScrollWheel => m_Wrapper.m_Default_ScrollWheel;
        public InputAction @Move => m_Wrapper.m_Default_Move;
        public InputAction @Submit => m_Wrapper.m_Default_Submit;
        public InputAction @Cancel => m_Wrapper.m_Default_Cancel;
        public InputAction @TrackedPosition => m_Wrapper.m_Default_TrackedPosition;
        public InputAction @TrackedOrientation => m_Wrapper.m_Default_TrackedOrientation;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Add(instance);
            @Dismiss1.started += instance.OnDismiss1;
            @Dismiss1.performed += instance.OnDismiss1;
            @Dismiss1.canceled += instance.OnDismiss1;
            @Dismiss2.started += instance.OnDismiss2;
            @Dismiss2.performed += instance.OnDismiss2;
            @Dismiss2.canceled += instance.OnDismiss2;
            @Dismiss3.started += instance.OnDismiss3;
            @Dismiss3.performed += instance.OnDismiss3;
            @Dismiss3.canceled += instance.OnDismiss3;
            @Dismiss4.started += instance.OnDismiss4;
            @Dismiss4.performed += instance.OnDismiss4;
            @Dismiss4.canceled += instance.OnDismiss4;
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @TrackedPosition.started += instance.OnTrackedPosition;
            @TrackedPosition.performed += instance.OnTrackedPosition;
            @TrackedPosition.canceled += instance.OnTrackedPosition;
            @TrackedOrientation.started += instance.OnTrackedOrientation;
            @TrackedOrientation.performed += instance.OnTrackedOrientation;
            @TrackedOrientation.canceled += instance.OnTrackedOrientation;
        }

        private void UnregisterCallbacks(IDefaultActions instance)
        {
            @Dismiss1.started -= instance.OnDismiss1;
            @Dismiss1.performed -= instance.OnDismiss1;
            @Dismiss1.canceled -= instance.OnDismiss1;
            @Dismiss2.started -= instance.OnDismiss2;
            @Dismiss2.performed -= instance.OnDismiss2;
            @Dismiss2.canceled -= instance.OnDismiss2;
            @Dismiss3.started -= instance.OnDismiss3;
            @Dismiss3.performed -= instance.OnDismiss3;
            @Dismiss3.canceled -= instance.OnDismiss3;
            @Dismiss4.started -= instance.OnDismiss4;
            @Dismiss4.performed -= instance.OnDismiss4;
            @Dismiss4.canceled -= instance.OnDismiss4;
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @TrackedPosition.started -= instance.OnTrackedPosition;
            @TrackedPosition.performed -= instance.OnTrackedPosition;
            @TrackedPosition.canceled -= instance.OnTrackedPosition;
            @TrackedOrientation.started -= instance.OnTrackedOrientation;
            @TrackedOrientation.performed -= instance.OnTrackedOrientation;
            @TrackedOrientation.canceled -= instance.OnTrackedOrientation;
        }

        public void RemoveCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    public interface IDefaultActions
    {
        void OnDismiss1(InputAction.CallbackContext context);
        void OnDismiss2(InputAction.CallbackContext context);
        void OnDismiss3(InputAction.CallbackContext context);
        void OnDismiss4(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnTrackedPosition(InputAction.CallbackContext context);
        void OnTrackedOrientation(InputAction.CallbackContext context);
    }
}
